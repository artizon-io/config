[aws]
disabled = true

[azure]
disabled = true

[cmd_duration]
disabled = true

[package]
disabled = true

[battery]
disabled = true

[directory]
style = 'white bold'
disabled = false

[git_status]
format = '([$all_status$ahead_behind]($style) )'
style = 'bold bright-black'
ahead = '⇡'
behind = '⇣'
stashed = ''
up_to_date = ''
diverged = 'ʏ'
conflicted = 'C'
deleted = 'D'
renamed = 'R'
modified = '!'
staged = '+'
untracked = '?'
ignore_submodules = true
disabled = false

[git_state]
rebase = 'REBASING'
merge = 'MERGING'
revert = 'REVERTING'
cherry_pick = 'CHERRY-PICKING'
bisect = 'BISECTING'
style = 'bold bright-black'
format = '([$state( $progress_current/$progress_total)]($style) )'
disabled = false

[git_branch]
format = '⋅ [$symbol$branch(:$remote_branch)]($style) '
symbol = ' '
style = 'bold blue'
disabled = false

[python]
pyenv_version_name = true
pyenv_prefix = ''
format = '⋅ [${symbol}${pyenv_prefix}(${version} )]($style)[($virtualenv )](bold bright-black)'
version_format = 'v${raw}'
style = 'blue bold'
symbol = 'Python '
disabled = false

[rust]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Rust '
style = 'bold blue'
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []
disabled = false

[c]
format = '⋅ [($name )($version )]($style)'
version_format = 'v${raw}'
style = 'blue bold'
symbol = 'C '
detect_extensions = [
    'c',
    'h',
]
detect_files = []
detect_folders = []
commands = [
    [
        'cc',
        '--version',
    ],
    [
        'gcc',
        '--version',
    ],
    [
        'clang',
        '--version',
    ],
]
disabled = false

[cmake]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'CMake '
style = 'bold blue'
detect_extensions = []
detect_files = [
    'CMakeLists.txt',
    'CMakeCache.txt',
]
disabled = false

[golang]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Go '
style = 'bold blue'
detect_extensions = ['go']
detect_files = [
    'go.mod',
    'go.sum',
    'go.work',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = ['Godeps']
disabled = false

[nix_shell]
format = '⋅ [$symbol$state( \($name\))]($style)'
symbol = 'Nix '
style = 'bold blue'
impure_msg = 'impure'
pure_msg = 'pure'
disabled = false

[lua]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Lua '
style = 'bold blue'
lua_binary = 'lua'
disabled = false
detect_extensions = ['lua']
detect_files = ['.lua-version']
detect_folders = ['lua']

[nodejs]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Node '
style = 'bold blue'
detect_extensions = [
    'js',
    'mjs',
    'cjs',
    'ts',
    'mts',
    'cts',
]
detect_files = [
    'package.json',
    '.node-version',
    '.nvmrc',
]
detect_folders = ['node_modules']
disabled = false

[swift]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Swift '
style = 'bold blue'
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []
disabled = false

[ruby]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Ruby '
style = 'bold blue'
disabled = false
detect_extensions = ['rb']
detect_files = [
    'Gemfile',
    '.ruby-version',
]
detect_folders = []
detect_variables = [
    'RUBY_VERSION',
    'RBENV_VERSION',
]

[zig]
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Zig '
style = 'bold blue'
detect_extensions = ['zig']
detect_files = []
detect_folders = []
disabled = false

# https://starship.rs/config/#custom-commands
# https://github.com/starship/starship/discussions/1252

[custom.osx]
command = 'echo $(arch)'
symbol = ' '
format = '⋅ [$symbol($output )]($style)'
style = 'bold bright-black'
when = '[[ "$(uname)" == "Darwin" ]]'

[custom.linux]
command = 'echo $(arch)'
symbol = ' '
format = '⋅ [$symbol($output )]($style)'
style = 'bold bright-black'
when = '[[ "$(uname)" == "Linux" ]]'

[custom.ssh_remote_conn]
description = "show number of remote ssh connections"
command = "w -h | awk '{print $6}' | grep 'sshd' | wc -l"
when = "w -h | awk '{print $6}' | grep 'sshd' | wc -l | xargs -I{} -- test {} -gt 0"
symbol = "SSH "
format = '⋅ [$symbol($output )]($style)'
style = "bold grey"
